theme_bw()
ec50_comp %>%
ggplot(aes(x = Estimate, fungicide, y = fungicide, color = fungicide, point_color = fungicide, fill = fungicide)) +
geom_density_ridges(
jittered_points = TRUE,
size = 0.5,
width = 0.2, alpha = 0.5, scale = 0.9, position = "raincloud") +
scale_fill_manual(values = c("#00AFBB", "#E7B800")) +
scale_color_manual(values = c("#00AFBB", "#E7B800"), guide = "none") +
scale_discrete_manual("point_color", values = c("#00AFBB", "#E7B800"), guide = "none") +
labs(x = expression("EC"[50]^{}*~"(mg/L)"),
y = "") +
theme(legend.position = "none")+
xlim (-0.06,1) +
theme_bw()
ec50_comp %>%
ggplot(aes(x = Estimate, fungicide, y = fungicide, color = fungicide, point_color = fungicide, fill = fungicide)) +
geom_density_ridges(
jittered_points = TRUE,
size = 0.5,
width = 0.2, alpha = 0.5, scale = 0.9, position = "raincloud") +
scale_fill_manual(values = c("#00AFBB", "#E7B800")) +
scale_color_manual(values = c("#00AFBB", "#E7B800"), guide = "none") +
scale_discrete_manual("point_color", values = c("#00AFBB", "#E7B800"), guide = "none") +
labs(x = expression("EC"[50]^{}*~"(mg/L)"),
y = "") +
theme(legend.position = "none")+
xlim (-0.06,1)
ec50_comp %>%
ggplot(aes(x = Estimate, fungicide, y = fungicide, color = fungicide, point_color = fungicide, fill = fungicide)) +
geom_density_ridges(
jittered_points = TRUE,
size = 0.5,
width = 0.2, alpha = 0.5, scale = 0.9, position = "raincloud") +
scale_fill_manual(values = c("#00AFBB", "#E7B800")) +
scale_color_manual(values = c("#00AFBB", "#E7B800"), guide = "none") +
scale_discrete_manual("point_color", values = c("#00AFBB", "#E7B800"), guide = "none") +
labs(x = expression("EC"[50]^{}*~"(mg/L)"),
y = "") +
theme(legend.position = "none")+
xlim (-0.06,1)
ggsave("figures/Figure_05.png", width = 7, height = 4, dpi = 300)
ks.test(ec50_teb$Estimate, ec50_met$Estimate, alternative = "two.side")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(tidyverse)
library(readxl)
library(easyanova)
library(agricolae)
fung <- read_excel("data/lab_experiment.xlsx", sheet = "fungicide") %>%
filter(isolate!="PH1")
fung1 <- fung %>%
group_by(assay, fungicide, isolate, region, dose, rep) %>%
summarize(mgr = c(da+db)/2)
fung <- read_excel("data/lab_experiment.xlsx", sheet = "fungicide") %>%
filter(isolate!="PH1")
fung1 <- fung %>%
group_by(assay, fungicide, isolate, region, dose, rep) %>%
summarize(mgr = c(da+db)/2)
fung1 <- fung %>%
group_by(assay, fungicide, isolate, dose, rep) %>%
summarize(mgr = c(da+db)/2)
## Checking the difference between assays
teb <- fung1 %>%
filter(fungicide!="Metconazole")
teb_lm<-with(teb, lm(mgr~assay))
summary(teb_lm)
anova(teb_lm)
cv.model(teb_lm)
LSD.test(teb_lm,"assay",console=TRUE)
assay1 <- teb %>%
filter(assay==1)
assay2 <- teb %>%
filter(assay==2)
assay2$rep[assay2$rep==1]<-3
assay2$rep[assay2$rep==2]<-4
assay2$assay[assay2$assay==2]<-1
teb1 <- rbind(assay1, assay2) %>%
arrange(isolate, dose)
## Checking the difference between assays
met <- fung1 %>%
filter(fungicide!="Tebuconazole")
met_lm<-with(met, lm(mgr~assay))
summary(met_lm)
anova(met_lm)
cv.model(met_lm)
LSD.test(met_lm,"assay",console=TRUE)
assay1_met <- met %>%
filter(assay==1)
assay2_met <- met %>%
filter(assay==2)
assay2_met$rep[assay2_met$rep==1]<-3
assay2_met$rep[assay2_met$rep==2]<-4
assay2_met$assay[assay2_met$assay==2]<-1
met1 <- rbind(assay1_met, assay2_met) %>%
arrange(isolate, dose)
fung_all <- rbind(teb1, met1)
library(ec50estimator)
library(drc)
ec50 = estimate_EC50(mgr~dose,
data = fung_all,
isolate_col = "isolate",
strata_col =  c("fungicide"),
interval = "delta",
fct = LL.4())
ec50 <- ec50 %>%
rename(
isolate = ID)
## Export data
#write.csv(ec50, file = "data/ec50_region.csv")
ec50_all <- read_csv("data/ec50_region.csv")
ec50_comp <- ec50_all %>%
select(-X1)
ec50_all <- read_csv("data/ec50_region.csv")
View(ec50_all)
ec50_comp <- ec50_all %>%
select(-X1)
library(tidyverse)
library(readxl)
library(easyanova)
library(agricolae)
library(plyr)
library(dplyr)
ec50_all <- read_csv("data/ec50_region.csv")
ec50_comp <- ec50_all %>%
select(-X1)
library(agricolae)
ec50_comp <- ec50_all %>%
select(-X1)
ec50_all <- read_csv("data/ec50_region.csv")
ec50_comp <- ec50_all %>%
select(-X1)
library(car)
ec50_all <- read_csv("data/ec50_region.csv")
ec50_comp <- ec50_all %>%
select(-X1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(agricolae)
library(broom)
library(ggthemes)
library(plyr)
library(easyanova)
library(car)
library(MASS)
library(lme4)
detach(package:plyr)
theme_set(theme_bw())
ec50_all <- read_csv("data/ec50_region.csv")
ec50_comp <- ec50_all %>%
select(-X1)
ec50_comp <- ec50_all %>%
select(-X1)
ec50_all <- read_csv("data/ec50_region.csv")
ec50_teb <- ec50_all %>%
filter(fungicide =="Tebuconazole")
library(car)
ec50_all <- read_csv("data/ec50_region.csv")
## Tebuconazole
ec50_teb <- ec50_all %>%
filter(fungicide =="Tebuconazole")
ec50_teb %>%
get_summary_stats(Estimate, type = "full")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(agricolae)
library(broom)
library(ggthemes)
library(plyr)
library(easyanova)
library(car)
library(MASS)
library(lme4)
detach(package:plyr)
library(ec50estimator)
theme_set(theme_bw())
ec50_teb %>%
get_summary_stats(Estimate, type = "full")
library(janitor)
library(car)
ec50_all <- read_csv("data/ec50_region.csv")
## Tebuconazole
ec50_teb <- ec50_all %>%
filter(fungicide =="Tebuconazole")
ec50_teb %>%
get_summary_stats(Estimate, type = "full")
library(tidyverse)
library(metafor)
library(ggthemes)
library(cowplot)
library(scales)
library(broom)
library(dplyr)
library(readxl)
library(gsheet)
library(janitor)
library(cowplot)
library(car)
ec50_all <- read_csv("data/ec50_region.csv")
## Tebuconazole
ec50_teb <- ec50_all %>%
filter(fungicide =="Tebuconazole")
ec50_teb %>%
get_summary_stats(Estimate, type = "full")
library(tidyverse)
library(ggmap)
library(maps)
library(mapdata)
library(viridis)
library(readxl)
library(cowplot)
library(lme4)
library(agricolae)
library(car)
theme_set(theme_minimal())
if(!"here" %in%installed.packages()){
install.packages("here")
}
library("here")
map_inf_2018 <- read.csv(here::here( "data", "pa_county.csv"), header = T, sep = ",")
## Loading the data set
map_inf_2018 <- read.csv(here::here( "data", "pa_county.csv"), header = T, sep = ",")
inf_2018 <- data.frame(
county = c("Armstrong", "Centre", "Lancaster", "Potter", "Tioga", "York"),
long = c(-79.66978, -77.64151,-75.93410, -78.04831, -76.97115, -77.09147),
lat = c(41.08680, 40.74876, 40.04975, 41.47642, 41.99781, 40.04975))
map_inf_2018 %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = sev_2018),
color = "grey50",
alpha = 1) +
scale_fill_distiller(direction = 1,
na.value = "white",
palette = "Greens") +
geom_label(data = inf_2018, aes(long, lat, label = county), size = 2) +
coord_map() +
labs(fill = "FHB severity (%)") +
labs(x = "Longitude", y = "Latitude") +
theme(axis.text = element_text(size = 12)) +
theme(legend.text = element_text(size = 12)) +
theme_void() +
ggtitle("2018") +
theme(plot.title = element_text(
hjust = 0.5,
vjust = 0.5,
face = 'bold'
))
ggsave("plots/map_sev_2018.png", width = 7, height = 5, dpi = 300)
## Loading the data set
map_inf_2019 <-
read.csv(here::here( "data", "pa_county.csv"), header = T, sep = ",")
inf_2019 <-
data.frame(
county = c("Centre", "Lancaster", "Potter", "Crawford", "Erie"),
long = c( -77.64151,-75.93410, -78.04831, -79.7, -79.7),
lat = c( 40.74876, 40.04975, 41.5, 41.7, 42.0))
# map_inf_2019 <-
map_inf_2019 %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = sev_2019),color = "grey50", alpha=1) +
scale_fill_distiller(direction = 1,
na.value = "white",
palette = "Greens") +
geom_label(data=inf_2019, aes(long, lat, label = county), size=2)+
coord_map() +
labs(fill = "FHB severity (%)")+
labs(x = "Longitude", y = "Latitude")+
theme(axis.text=element_text(size=12)) +
theme(legend.text=element_text(size=12))+
theme_void()+
ggtitle("2019")+
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'))
ggsave(map_inf_2019,"out/map_sev_2019.png", width = 7, height = 5, dpi = 300)
require(gtable)
library(grid)
library(ggplotify)
labs <-
bind_rows(
mutate(inf_2018, variable = "2018"),
mutate(inf_2019, variable = "2019")
)
require(gtable)
library(grid)
library(ggplotify)
labs <-
bind_rows(
mutate(inf_2018, variable = "2018"),
mutate(inf_2019, variable = "2019")
)
#Melt data frame and plot together
map_inf_2019 %>%
reshape2::melt(measure.vars = c("sev_2018", "sev_2019")) %>%
mutate(variable = gsub("sev_","", variable)) %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = value),
color = "grey50", alpha=1) +
facet_wrap(~variable,
ncol = 2)+
scale_fill_distiller(direction = 1,
na.value = "white",
palette = "Greens") +
geom_label(data=labs, aes(long, lat, label = county), size=2)+
coord_map() +
labs(fill = "FHB severity (%)")+
labs(x = "Longitude", y = "Latitude")+
theme(axis.text=element_text(size=12)) +
theme(legend.text=element_text(size=12))+
theme_void() +
theme(legend.position = "top")
#ggsave("plots/map_sev_all.png", width = 8, height = 6, dpi = 300)
#dummy var - proportions
map_inf_2019 %>%
reshape2::melt(measure.vars = c("sev_2018", "sev_2019")) %>%
mutate(variable = gsub("sev_","", variable)) %>%
mutate(
value = value/max(value)) %>% #this is not working - you have ot calculate outside of pipe
summarise(value = mean(value))
map_inf_2019
require(gtable)
library(grid)
library(ggplotify)
labs <-
bind_rows(
mutate(inf_2018, variable = "2018"),
mutate(inf_2019, variable = "2019")
)
#Melt data frame and plot together
map_inf_2019 %>%
reshape2::melt(measure.vars = c("sev_2018", "sev_2019")) %>%
mutate(variable = gsub("sev_","", variable)) %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = value),
color = "grey50", alpha=1) +
facet_wrap(~variable,
ncol = 2)+
scale_fill_distiller(direction = 1,
na.value = "white",
palette = "Greens") +
geom_label(data=labs, aes(long, lat, label = county), size=2)+
coord_map() +
labs(fill = "FHB severity (%)")+
labs(x = "Longitude", y = "Latitude")+
theme(axis.text=element_text(size=12)) +
theme(legend.text=element_text(size=12))+
theme_void() +
theme(legend.position = "top")
#ggsave("plots/map_sev_all.png", width = 8, height = 6, dpi = 300)
#dummy var - proportions
map_inf_2019 %>%
reshape2::melt(measure.vars = c("sev_2018", "sev_2019")) %>%
mutate(variable = gsub("sev_","", variable)) %>%
mutate(
value = value/max(value)) %>% #this is not working - you have ot calculate outside of pipe
summarise(value = mean(value))
map_inf_2019 %>%
reshape2::melt(measure.vars = c("sev_2018", "sev_2019")) %>%
mutate(variable = gsub("sev_","", variable)) %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = value),
color = "grey50", alpha=1) +
facet_wrap(~variable,
ncol = 2)+
scale_fill_distiller(direction = 1,
na.value = "white",
palette = "Greens") +
geom_label(data=labs, aes(long, lat, label = county), size=2)+
coord_map() +
labs(fill = "FHB severity (%)")+
labs(x = "Longitude", y = "Latitude")+
theme(axis.text=element_text(size=12)) +
theme(legend.text=element_text(size=12))+
theme_void() +
theme(legend.position = "top")
## Loading the data set
map_inf_2018 <- read.csv(here::here( "data", "pa_county.csv"), header = T, sep = ",")
inf_2018 <- data.frame(
county = c("Armstrong", "Centre", "Lancaster", "Potter", "Tioga", "York"),
long = c(-79.66978, -77.64151,-75.93410, -78.04831, -76.97115, -77.09147),
lat = c(41.08680, 40.74876, 40.04975, 41.47642, 41.99781, 40.04975))
map_inf_2018 %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = sev_2018),
color = "grey50",
alpha = 1) +
scale_fill_distiller(direction = 1,
na.value = "white",
palette = "Greens") +
geom_label(data = inf_2018, aes(long, lat, label = county), size = 2) +
coord_map() +
labs(fill = "FHB severity (%)") +
labs(x = "Longitude", y = "Latitude") +
theme(axis.text = element_text(size = 12)) +
theme(legend.text = element_text(size = 12)) +
theme_void() +
ggtitle("2018") +
theme(plot.title = element_text(
hjust = 0.5,
vjust = 0.5,
face = 'bold'
))
#ggsave("figures/map_sev_2018.png", width = 7, height = 5, dpi = 300)
## Loading the data set
map_inf_2018 <- read.csv(here::here( "data", "pa_county.csv"), header = T, sep = ",")
inf_2018 <- data.frame(
county = c("Armstrong", "Centre", "Lancaster", "Potter", "Tioga", "York"),
long = c(-79.66978, -77.64151,-75.93410, -78.04831, -76.97115, -77.09147),
lat = c(41.08680, 40.74876, 40.04975, 41.47642, 41.99781, 40.04975))
map_inf_2018 %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = sev_2018),
color = "grey50",
alpha = 1) +
scale_fill_distiller(direction = 1,
na.value = "white",
palette = "Greens") +
geom_label(data = inf_2018, aes(long, lat, label = county), size = 2) +
coord_map() +
labs(fill = "FHB severity (%)") +
labs(x = "Longitude", y = "Latitude") +
theme(axis.text = element_text(size = 12)) +
theme(legend.text = element_text(size = 12)) +
theme_void() +
ggtitle("2018") +
theme(plot.title = element_text(
hjust = 0.5,
vjust = 0.5,
face = 'bold'
))
## Loading the data set
map_inf_2019 <-
read.csv(here::here( "data", "pa_county.csv"), header = T, sep = ",")
inf_2019 <-
data.frame(
county = c("Centre", "Lancaster", "Potter", "Crawford", "Erie"),
long = c( -77.64151,-75.93410, -78.04831, -79.7, -79.7),
lat = c( 40.74876, 40.04975, 41.5, 41.7, 42.0))
# map_inf_2019 <-
map_inf_2019 %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = sev_2019),color = "grey50", alpha=1) +
scale_fill_distiller(direction = 1,
na.value = "white",
palette = "Greens") +
geom_label(data=inf_2019, aes(long, lat, label = county), size=2)+
coord_map() +
labs(fill = "FHB severity (%)")+
labs(x = "Longitude", y = "Latitude")+
theme(axis.text=element_text(size=12)) +
theme(legend.text=element_text(size=12))+
theme_void()+
ggtitle("2019")+
theme(plot.title=element_text( hjust=0.5, vjust=0.5, face='bold'))
require(gtable)
library(grid)
library(ggplotify)
labs <-
bind_rows(
mutate(inf_2018, variable = "2018"),
mutate(inf_2019, variable = "2019")
)
#Melt data frame and plot together
map_inf_2019 %>%
reshape2::melt(measure.vars = c("sev_2018", "sev_2019")) %>%
mutate(variable = gsub("sev_","", variable)) %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = value),
color = "grey50", alpha=1) +
facet_wrap(~variable,
ncol = 2)+
scale_fill_distiller(direction = 1,
na.value = "white",
palette = "Greens") +
geom_label(data=labs, aes(long, lat, label = county), size=2)+
coord_map() +
labs(fill = "FHB severity (%)")+
labs(x = "Longitude", y = "Latitude")+
theme(axis.text=element_text(size=12)) +
theme(legend.text=element_text(size=12))+
theme_void() +
theme(legend.position = "top")
#ggsave("plots/map_sev_all.png", width = 8, height = 6, dpi = 300)
require(gtable)
library(grid)
library(ggplotify)
labs <-
bind_rows(
mutate(inf_2018, variable = "2018"),
mutate(inf_2019, variable = "2019")
)
#Melt data frame and plot together
map_inf_2019 %>%
reshape2::melt(measure.vars = c("sev_2018", "sev_2019")) %>%
mutate(variable = gsub("sev_","", variable)) %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = value),
color = "grey50", alpha=1) +
facet_wrap(~variable,
ncol = 2)+
scale_fill_distiller(direction = 1,
na.value = "white",
palette = "Greens") +
geom_label(data=labs, aes(long, lat, label = county), size=2)+
coord_map() +
labs(fill = "FHB severity (%)")+
labs(x = "Longitude", y = "Latitude")+
theme(axis.text=element_text(size=12)) +
theme(legend.text=element_text(size=12))+
theme_void() +
theme(legend.position = "top")
ggsave("figures/Figure_02.png", width = 8, height = 6, dpi = 300)
rmarkdown::render_site(encoding = 'UTF-8')
